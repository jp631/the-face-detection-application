{"ast":null,"code":"var _jsxFileName = \"/Users/jpdeveloper/workspace/facerecognitionbrain/src/components/displayError/displayError.js\";\nimport React from \"react\";\nimport \"./displayError.css\";\n\nlet hid = () => {\n  document.getElementById(\"pop\").classList.toggle(\"close\");\n};\n\nclass DisplayError extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      errorInfo: null\n    };\n  } // static getDerivedStateFromError(error, errorInfo) {\n  //   // Update state so the next render will show the fallback UI.\n  //   return { hasError: true, errorInfo: errorInfo };\n  // }\n\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    }); // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return React.createElement(\"div\", {\n        id: \"pop\",\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"innerPopup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Something Went Wrong\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(\"footer\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        id: \"close\",\n        onClick: hid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"x\")))));\n    } // Normally, just render children\n\n\n    return this.props.children;\n  }\n\n}\n\nexport default DisplayError;","map":{"version":3,"sources":["/Users/jpdeveloper/workspace/facerecognitionbrain/src/components/displayError/displayError.js"],"names":["React","hid","document","getElementById","classList","toggle","DisplayError","Component","constructor","props","state","error","errorInfo","componentDidCatch","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;AAEA,IAAIC,GAAG,GAAE,MAAK;AACZC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EACGC,SADH,CAEGC,MAFH,CAEU,OAFV;AAGD,CAJD;;AAOA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,KAAK,EAAE,IADG;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAGD,GANwC,CAQzC;AACA;AACA;AACA;;;AACAC,EAAAA,iBAAiB,CAACF,KAAD,EAAQC,SAAR,EAAmB;AAClC;AACA,SAAKE,QAAL,CAAc;AACZH,MAAAA,KAAK,EAAEA,KADK;AAEZC,MAAAA,SAAS,EAAEA;AAFC,KAAd,EAFkC,CAMlC;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKL,KAAL,CAAWE,SAAf,EAA0B;AACxB;AACA,aACE;AAAK,QAAA,EAAE,EAAC,KAAR;AAAc,QAAA,SAAS,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,EAAE,EAAC,OAAN;AAAc,QAAA,OAAO,EAAEX,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CALJ,CADE,CADF,CADF;AAeD,KAlBM,CAmBP;;;AACA,WAAO,KAAKQ,KAAL,CAAWO,QAAlB;AACD;;AA1CwC;;AA6C3C,eAAeV,YAAf","sourcesContent":["import React from \"react\";\nimport \"./displayError.css\";\n\nlet hid =() =>{\n  document.getElementById(\"pop\")\n    .classList\n    .toggle(\"close\");\n}\n\n\nclass DisplayError extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       error: null,\n        errorInfo: null };\n  }\n\n  // static getDerivedStateFromError(error, errorInfo) {\n  //   // Update state so the next render will show the fallback UI.\n  //   return { hasError: true, errorInfo: errorInfo };\n  // }\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    })\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div id=\"pop\" className=\"popup\">\n          <div className=\"innerPopup\" >\n        <article>\n            <h3>Something Went Wrong</h3>\n            <div>\n                <p>{}</p>\n            </div>\n            <footer>\n              <p id=\"close\" onClick={hid} >x</p>\n            </footer>\n       </article>\n          </div>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n  }\n\nexport default DisplayError;\n"]},"metadata":{},"sourceType":"module"}