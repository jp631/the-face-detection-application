{"ast":null,"code":"var _jsxFileName = \"/Users/jpdeveloper/workspace/facerecognitionbrain/src/components/displayError/displayError.js\";\nimport React from \"react\";\nimport \"./displayError.css\";\n\nlet hid = () => {\n  document.getElementById(\"pop\").classList.toggle(\"close\");\n};\n\nlet show = ved => {\n  document.getElementById(ved).classList.toggle(\"show\");\n};\n\nclass DisplayError extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({\n      hasError: true\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Something went wrong.\"), \";\");\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default DisplayError;\n/**\nrender(){\n    let {title, text} = this.props;\n  return(\n    <div id=\"pop\" className=\"popup\">\n      <div className=\"innerPopup\" >\n\n    <article>\n            <h3> Title</h3>\n        <div>\n            <p>aaaaaaaaa</p>\n        </div>\n        <footer>\n          <p id=\"close\" onClick={hid} >x</p>\n        </footer>\n    </article>\n      </div>\n    </div>\n  )\n}\n}*/","map":{"version":3,"sources":["/Users/jpdeveloper/workspace/facerecognitionbrain/src/components/displayError/displayError.js"],"names":["React","hid","document","getElementById","classList","toggle","show","ved","DisplayError","Component","constructor","props","state","hasError","componentDidCatch","error","info","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;AAEA,IAAIC,GAAG,GAAE,MAAK;AACZC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EACGC,SADH,CAEGC,MAFH,CAEU,OAFV;AAGD,CAJD;;AAMA,IAAIC,IAAI,GAAGC,GAAD,IAAQ;AAChBL,EAAAA,QAAQ,CAACC,cAAT,CAAwBI,GAAxB,EACGH,SADH,CAEGC,MAFH,CAEU,MAFV;AAGD,CAJD;;AAMA,MAAMG,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACnB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,IAAR,EAAc;AAC7B;AACA,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AAED;;AAEDK,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKN,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,MADF;AAKD;;AACD,WAAO,KAAKF,KAAL,CAAWQ,QAAlB;AACD;;AAtB0C;;AAyB3C,eAAeX,YAAf;AAMA","sourcesContent":["import React from \"react\";\nimport \"./displayError.css\";\n\nlet hid =() =>{\n  document.getElementById(\"pop\")\n    .classList\n    .toggle(\"close\");\n}\n\nlet show =(ved) =>{\n  document.getElementById(ved)\n    .classList\n    .toggle(\"show\");\n}\n\nclass DisplayError extends React.Component {\n  constructor(props) {\n  super(props);\n  this.state = { hasError: false };\n}\n\ncomponentDidCatch(error, info) {\n  // Display fallback UI\n  this.setState({ hasError: true });\n\n}\n\nrender() {\n  if (this.state.hasError) {\n    // You can render any custom fallback UI\n    return (\n      <div>\n        <h1>Something went wrong.</h1>;\n     </div>\n    )\n  }\n  return this.props.children;\n}\n}\n\nexport default DisplayError;\n\n\n\n\n\n/**\nrender(){\n    let {title, text} = this.props;\n  return(\n    <div id=\"pop\" className=\"popup\">\n      <div className=\"innerPopup\" >\n\n    <article>\n            <h3> Title</h3>\n        <div>\n            <p>aaaaaaaaa</p>\n        </div>\n        <footer>\n          <p id=\"close\" onClick={hid} >x</p>\n        </footer>\n    </article>\n      </div>\n    </div>\n  )\n}\n}*/\n"]},"metadata":{},"sourceType":"module"}