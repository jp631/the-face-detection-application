{"ast":null,"code":"var _jsxFileName = \"/Users/jpdeveloper/workspace/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/navigation/navigation.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/SignIn.js';\nimport Register from './components/register/Register.js';\nimport DisplayError from './components/displayError/displayError.js';\nimport Rank from './components/rank/rank.js';\nimport Logo from './components/logo/logo.js';\nimport './App.css';\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n};\nconst HOST = \"https://gentle-castle-38377.herokuapp.com/\";\nconst initialState = {\n  input: \" \",\n  imageUrl: \"\",\n  box: {},\n  isSignIn: false,\n  route: \"signIn\",\n  error: \"\",\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signOut\") {\n        this.setState(initialState);\n      } else if (route === \"home\") {\n        this.setState({\n          isSignIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n      console.log(box);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(`${HOST}imageURL`, {\n        method: \"post\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch(`${HOST}image`, {\n            method: \"put\",\n            headers: {\n              \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            console.log(count);\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const {\n      isSignIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignIn: isSignIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), route === \"home\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })) : this.state.route === \"signIn\" ? React.createElement(DisplayError, {\n      title: \"is it working\",\n      information: \"Username or password \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jpdeveloper/workspace/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","Navigation","ImageLinkForm","FaceRecognition","SignIn","Register","DisplayError","Rank","Logo","particleOptions","particles","number","value","density","enable","value_area","HOST","initialState","input","imageUrl","box","isSignIn","route","error","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","onRouteChange","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","console","log","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/navigation/navigation.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/SignIn.js';\nimport Register from './components/register/Register.js';\nimport DisplayError from './components/displayError/displayError.js';\nimport Rank from './components/rank/rank.js';\nimport Logo from './components/logo/logo.js';\nimport './App.css';\n\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n}\n\nconst HOST = \"https://gentle-castle-38377.herokuapp.com/\";\n\nconst initialState = {\n  input: \" \",\n  imageUrl: \"\",\n  box: {},\n  isSignIn: false,\n  route: \"signIn\",\n  error: \"\",\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\n\n class App extends Component {\n    constructor(){\n      super();\n      this.state = initialState;\n      }\n\n    loadUser = (data) => {\n      this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }})\n    }\n    onRouteChange = (route) => {\n        if(route === \"signOut\"){\n          this.setState(initialState)\n        }else if (route === \"home\"){\n          this.setState({isSignIn: true})\n        }\n      this.setState({route : route});\n    }\n\n    calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n    }\n\n    displayFaceBox = (box) => {\n      this.setState({box : box});\n      console.log(box);\n    }\n    onInputChange = (event) =>{\n      this.setState({\n        input: event.target.value\n      })\n    }\n\n    onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n       fetch(`${HOST}imageURL`, {\n               method: \"post\",\n               headers: {\"content-type\": \"application/json\"},\n               body: JSON.stringify({\n                 input: this.state.input\n            })\n         })\n         .then(response => response.json())\n         .then(response => {\n           if(response){\n             fetch(`${HOST}image`, {\n                 method: \"put\",\n                 headers: {\"content-type\": \"application/json\"},\n                 body: JSON.stringify({\n                   id: this.state.user.id\n                 })\n           })\n            .then(response => response.json())\n            .then(count => {\n              console.log(count)\n              this.setState(Object.assign(this.state.user, {entries: count}))\n         })\n       }\n           this.displayFaceBox(this.calculateFaceLocation(response))\n         })\n    }\n\n\nrender(){\n  const { isSignIn, imageUrl, route, box } = this.state;\n  return (\n\n    <div className=\"App\">\n      <Particles className=\"particles\"\n        params ={particleOptions}\n      />\n\n    <Navigation isSignIn = {isSignIn} onRouteChange = {this.onRouteChange}/>\n    {\n      route === \"home\"\n        ?\n          <div>\n              <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl ={imageUrl} />\n          </div>\n        :\n           ( this.state.route === \"signIn\"\n             ?\n             <DisplayError title=\"is it working\" information=\"Username or password \">\n               <SignIn loadUser={this.loadUser} onRouteChange = {this.onRouteChange}/>\n              </DisplayError>\n             :\n               <Register loadUser={this.loadUser} onRouteChange = {this.onRouteChange}/>)\n\n  }\n\n    </div>\n\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}