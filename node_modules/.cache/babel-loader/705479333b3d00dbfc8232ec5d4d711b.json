{"ast":null,"code":"var _jsxFileName = \"/Users/jpdeveloper/workspace/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/navigation/navigation.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/SignIn.js';\nimport Register from './components/register/Register.js';\nimport Rank from './components/rank/rank.js';\nimport Logo from './components/logo/logo.js';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'e7c6ed6030c54d9d8fad78b455fa8d12'\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n};\nconst initialState = {\n  input: \" \",\n  imageUrl: \"\",\n  box: {},\n  isSignIn: false,\n  route: \"signIn\",\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signOut\") {\n        this.setState({\n          isSignIn: false\n        });\n      } else if (route === \"home\") {\n        this.setState({\n          isSignIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n      console.log(box);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch(\"http://localhost:3000/image\", {\n            method: \"put\",\n            headers: {\n              \"content-type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            console.log(count);\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.state = initialState;\n  } // componentDidMount() {\n  //   fetch(\"http://localhost:3000\")\n  //     .then(response => response.json())\n  //     .then(data => console.log(data))\n  // }\n\n\n  render() {\n    const {\n      isSignIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignIn: isSignIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), route === \"home\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })) : this.state.route === \"signIn\" ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jpdeveloper/workspace/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","ImageLinkForm","FaceRecognition","SignIn","Register","Rank","Logo","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","isSignIn","route","user","id","name","email","entries","joined","constructor","loadUser","data","setState","onRouteChange","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","console","log","onInputChange","event","target","onButtonSubmit","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/navigation/navigation.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/SignIn.js';\nimport Register from './components/register/Register.js';\nimport Rank from './components/rank/rank.js';\nimport Logo from './components/logo/logo.js';\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: 'e7c6ed6030c54d9d8fad78b455fa8d12'\n});\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: \" \",\n  imageUrl: \"\",\n  box: {},\n  isSignIn: false,\n  route: \"signIn\",\n  user: {\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  }\n}\n class App extends Component {\n    constructor(){\n      super();\n      this.state = initialState;\n      }\n\n    // componentDidMount() {\n    //   fetch(\"http://localhost:3000\")\n    //     .then(response => response.json())\n    //     .then(data => console.log(data))\n    // }\n    loadUser = (data) => {\n      this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }})\n    }\n    onRouteChange = (route) => {\n        if(route === \"signOut\"){\n          this.setState({isSignIn: false})\n        }else if (route === \"home\"){\n          this.setState({isSignIn: true})\n        }\n      this.setState({route : route});\n    }\n\n    calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n    }\n\n    displayFaceBox = (box) => {\n      this.setState({box : box});\n      console.log(box);\n    }\n    onInputChange = (event) =>{\n      this.setState({\n        input: event.target.value\n      })\n    }\n\n    onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      })\n      app.models.predict(\n         Clarifai.FACE_DETECT_MODEL,\n          this.state.input)\n         .then(response => {\n           if(response){\n             fetch(\"http://localhost:3000/image\", {\n                 method: \"put\",\n                 headers: {\"content-type\": \"application/json\"},\n                 body: JSON.stringify({\n                   id: this.state.user.id\n                 })\n           })\n            .then(response => response.json())\n            .then(count => {\n              console.log(count)\n              this.setState(Object.assign(this.state.user, {entries: count}))\n         })\n       }\n           this.displayFaceBox(this.calculateFaceLocation(response))\n         })\n         .catch(err => console.log(err));\n    }\n\n\nrender(){\n  const { isSignIn, imageUrl, route, box } = this.state;\n  return (\n    <div className=\"App\">\n      <Particles className=\"particles\"\n        params ={particleOptions}\n      />\n\n    <Navigation isSignIn = {isSignIn} onRouteChange = {this.onRouteChange}/>\n    {\n      route === \"home\"\n        ?\n          <div>\n              <Logo />\n            <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl ={imageUrl} />\n          </div>\n        :\n           ( this.state.route === \"signIn\"\n             ?\n               <SignIn loadUser={this.loadUser} onRouteChange = {this.onRouteChange}/>\n             :\n               <Register loadUser={this.loadUser} onRouteChange = {this.onRouteChange}/>)\n\n\n  }\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}