{"ast":null,"code":"var _jsxFileName = \"/Users/jpdeveloper/workspace/facerecognitionbrain/src/components/displayError/displayError.js\";\nimport React from \"react\";\nimport \"./displayError.css\";\n\nlet hid = () => {\n  document.getElementById(\"pop\").classList.toggle(\"close\");\n};\n\nclass DisplayError extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: \"\",\n      errorInfo: \"\",\n      hasError: false\n    };\n  } // static getDerivedStateFromError(error, errorInfo) {\n  //   // Update state so the next render will show the fallback UI.\n  //   return { hasError: true, errorInfo: errorInfo };\n  // }\n\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    }); // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    } // Normally, just render children\n\n\n    return this.props.children;\n  }\n\n}\n\nexport default DisplayError;","map":{"version":3,"sources":["/Users/jpdeveloper/workspace/facerecognitionbrain/src/components/displayError/displayError.js"],"names":["React","hid","document","getElementById","classList","toggle","DisplayError","Component","constructor","props","state","error","errorInfo","hasError","componentDidCatch","setState","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;AAEA,IAAIC,GAAG,GAAE,MAAK;AACZC,EAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EACGC,SADH,CAEGC,MAFH,CAEU,OAFV;AAGD,CAJD;;AAOA,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,KAAK,EAAE,EADG;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAID,GAPwC,CASzC;AACA;AACA;AACA;;;AACAC,EAAAA,iBAAiB,CAACH,KAAD,EAAQC,SAAR,EAAmB;AAClC;AACA,SAAKG,QAAL,CAAc;AACZJ,MAAAA,KAAK,EAAEA,KADK;AAEZC,MAAAA,SAAS,EAAEA;AAFC,KAAd,EAFkC,CAMlC;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKN,KAAL,CAAWE,SAAf,EAA0B;AACxB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD,KATM,CAUP;;;AACA,WAAO,KAAKH,KAAL,CAAWQ,QAAlB;AACD;;AAlCwC;;AAqC3C,eAAeX,YAAf","sourcesContent":["import React from \"react\";\nimport \"./displayError.css\";\n\nlet hid =() =>{\n  document.getElementById(\"pop\")\n    .classList\n    .toggle(\"close\");\n}\n\n\nclass DisplayError extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       error: \"\",\n        errorInfo: \"\",\n      hasError: false };\n  }\n\n  // static getDerivedStateFromError(error, errorInfo) {\n  //   // Update state so the next render will show the fallback UI.\n  //   return { hasError: true, errorInfo: errorInfo };\n  // }\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    })\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n\n        </div>\n      \n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n  }\n\nexport default DisplayError;\n"]},"metadata":{},"sourceType":"module"}