{"ast":null,"code":"var _jsxFileName = \"/Users/jpdeveloper/workspace/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/navigation/navigation.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/SignIn.js';\nimport Register from './components/register/Register.js';\nimport Rank from './components/rank/rank.js';\nimport Logo from './components/logo/logo.js';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: 'e7c6ed6030c54d9d8fad78b455fa8d12'\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.Setstate({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === \"signOut\") {\n        this.setState({\n          isSignIn: false\n        });\n      } else if (route === \"home\") {\n        this.setState({\n          isSignIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById(\"inputImage\");\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n      console.log(box);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: \" \",\n      imageUrl: \"\",\n      box: {},\n      isSignIn: false,\n      route: \"signIn\",\n      user: {\n        id: \"12356\",\n        name: \"Prophete\",\n        email: \"prophete@gmail.com\",\n        entries: 0,\n        joined: \"\"\n      }\n    };\n  } // componentDidMount() {\n  //   fetch(\"http://localhost:3000\")\n  //     .then(response => response.json())\n  //     .then(data => console.log(data))\n  // }\n\n\n  render() {\n    const {\n      isSignIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignIn: isSignIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), route === \"home\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })) : this.state.route === \"signIn\" ? React.createElement(SignIn, {\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUseronRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jpdeveloper/workspace/facerecognitionbrain/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","ImageLinkForm","FaceRecognition","SignIn","Register","Rank","Logo","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","Setstate","user","id","name","email","entries","joined","onRouteChange","route","setState","isSignIn","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAO,WAAP;AAEA,MAAMC,GAAG,GAAG,IAAIR,QAAQ,CAACS,GAAb,CAAiB;AAC5BC,EAAAA,MAAM,EAAE;AADoB,CAAjB,CAAZ;AAIA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,IADD;AAEPC,QAAAA,UAAU,EAAE;AAFL;AAFH;AADC;AADW,CAAxB;;AAWC,MAAMR,GAAN,SAAkBX,SAAlB,CAA4B;AACzBoB,EAAAA,WAAW,GAAE;AACX;;AADW,SAuBbC,QAvBa,GAuBDC,IAAD,IAAU;AACnB,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAE;AACnBC,UAAAA,EAAE,EAAEH,IAAI,CAACG,EADU;AAEnBC,UAAAA,IAAI,EAAEJ,IAAI,CAACI,IAFQ;AAGnBC,UAAAA,KAAK,EAAEL,IAAI,CAACK,KAHO;AAInBC,UAAAA,OAAO,EAAEN,IAAI,CAACM,OAJK;AAKnBC,UAAAA,MAAM,EAAEP,IAAI,CAACO;AALM;AAAP,OAAd;AAOD,KA/BY;;AAAA,SAgCbC,aAhCa,GAgCIC,KAAD,IAAW;AACvB,UAAGA,KAAK,KAAK,SAAb,EAAuB;AACrB,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACD,OAFD,MAEM,IAAIF,KAAK,KAAK,MAAd,EAAqB;AACzB,aAAKC,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAd;AACD;;AACH,WAAKD,QAAL,CAAc;AAACD,QAAAA,KAAK,EAAGA;AAAT,OAAd;AACD,KAvCY;;AAAA,SAyCbG,qBAzCa,GAyCYZ,IAAD,IAAU;AAClC,YAAMa,YAAY,GAAGb,IAAI,CAACc,OAAL,CAAa,CAAb,EAAgBd,IAAhB,CAAqBe,OAArB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4CC,YAAjE;AACA,YAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,YAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,YAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACA,aAAO;AACLC,QAAAA,OAAO,EAAEX,YAAY,CAACY,QAAb,GAAwBJ,KAD5B;AAELK,QAAAA,MAAM,EAAEb,YAAY,CAACc,OAAb,GAAuBJ,MAF1B;AAGLK,QAAAA,QAAQ,EAAEP,KAAK,GAAIR,YAAY,CAACgB,SAAb,GAAyBR,KAHvC;AAILS,QAAAA,SAAS,EAAEP,MAAM,GAAIV,YAAY,CAACkB,UAAb,GAA0BR;AAJ1C,OAAP;AAMC,KApDY;;AAAA,SAsDbS,cAtDa,GAsDKC,GAAD,IAAS;AACxB,WAAKvB,QAAL,CAAc;AAACuB,QAAAA,GAAG,EAAGA;AAAP,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAzDY;;AAAA,SA0DbG,aA1Da,GA0DIC,KAAD,IAAU;AACxB,WAAK3B,QAAL,CAAc;AACZ4B,QAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAa7C;AADR,OAAd;AAGD,KA9DY;;AAAA,SAgEb8C,cAhEa,GAgEI,MAAM;AACrB,WAAK9B,QAAL,CAAc;AACZ+B,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWJ;AADT,OAAd;AAGAlD,MAAAA,GAAG,CAACuD,MAAJ,CAAWC,OAAX,CACGhE,QAAQ,CAACiE,iBADZ,EAEI,KAAKH,KAAL,CAAWJ,KAFf,EAGIQ,IAHJ,CAGSC,QAAQ,IAAI,KAAKf,cAAL,CAAoB,KAAKpB,qBAAL,CAA2BmC,QAA3B,CAApB,CAHrB,EAIIC,KAJJ,CAIUC,GAAG,IAAIf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CAJjB;AAKD,KAzEY;;AAEX,SAAKP,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,GADI;AAEXG,MAAAA,QAAQ,EAAE,EAFC;AAGXR,MAAAA,GAAG,EAAE,EAHM;AAIXtB,MAAAA,QAAQ,EAAE,KAJC;AAKXF,MAAAA,KAAK,EAAE,QALI;AAMXP,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAE,OADA;AAEJC,QAAAA,IAAI,EAAE,UAFF;AAGJC,QAAAA,KAAK,EAAE,oBAHH;AAIJC,QAAAA,OAAO,EAAE,CAJL;AAKJC,QAAAA,MAAM,EAAE;AALJ;AANK,KAAb;AAcC,GAjBsB,CAmBzB;AACA;AACA;AACA;AACA;;;AAsDJ2C,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEvC,MAAAA,QAAF;AAAY8B,MAAAA,QAAZ;AAAsBhC,MAAAA,KAAtB;AAA6BwB,MAAAA;AAA7B,QAAqC,KAAKS,KAAhD;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AACE,MAAA,MAAM,EAAGnD,eADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKA,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAIoB,QAAxB;AAAkC,MAAA,aAAa,EAAI,KAAKH,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,EAOEC,KAAK,KAAK,MAAV,GAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,aAAD;AAAe,MAAA,aAAa,EAAI,KAAK2B,aAArC;AAAoD,MAAA,cAAc,EAAE,KAAKI,cAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,eAAD;AAAiB,MAAA,GAAG,EAAEP,GAAtB;AAA2B,MAAA,QAAQ,EAAGQ,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,GASO,KAAKC,KAAL,CAAWjC,KAAX,KAAqB,QAArB,GAEE,oBAAC,MAAD;AAAQ,MAAA,aAAa,EAAI,KAAKD,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,GAIE,oBAAC,QAAD;AAAU,MAAA,qBAAqB,EAAI,KAAKA,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBX,CADF;AA2BD;;AA1G4B;;AA6G7B,eAAenB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/navigation/navigation.js';\nimport ImageLinkForm from './components/imageLinkForm/imageLinkForm.js';\nimport FaceRecognition from './components/faceRecognition/faceRecognition.js';\nimport SignIn from './components/signIn/SignIn.js';\nimport Register from './components/register/Register.js';\nimport Rank from './components/rank/rank.js';\nimport Logo from './components/logo/logo.js';\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: 'e7c6ed6030c54d9d8fad78b455fa8d12'\n});\n\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n}\n class App extends Component {\n    constructor(){\n      super();\n      this.state = {\n        input: \" \",\n        imageUrl: \"\",\n        box: {},\n        isSignIn: false,\n        route: \"signIn\",\n        user: {\n          id: \"12356\",\n          name: \"Prophete\",\n          email: \"prophete@gmail.com\",\n          entries: 0,\n          joined: \"\"\n        }\n        }\n      }\n\n    // componentDidMount() {\n    //   fetch(\"http://localhost:3000\")\n    //     .then(response => response.json())\n    //     .then(data => console.log(data))\n    // }\n    loadUser = (data) => {\n      this.Setstate({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }})\n    }\n    onRouteChange = (route) => {\n        if(route === \"signOut\"){\n          this.setState({isSignIn: false})\n        }else if (route === \"home\"){\n          this.setState({isSignIn: true})\n        }\n      this.setState({route : route});\n    }\n\n    calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById(\"inputImage\");\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n    }\n\n    displayFaceBox = (box) => {\n      this.setState({box : box});\n      console.log(box);\n    }\n    onInputChange = (event) =>{\n      this.setState({\n        input: event.target.value\n      })\n    }\n\n    onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      })\n      app.models.predict(\n         Clarifai.FACE_DETECT_MODEL,\n          this.state.input)\n         .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n         .catch(err => console.log(err));\n    }\n\n\nrender(){\n  const { isSignIn, imageUrl, route, box } = this.state;\n  return (\n    <div className=\"App\">\n      <Particles className=\"particles\"\n        params ={particleOptions}\n      />\n\n    <Navigation isSignIn = {isSignIn} onRouteChange = {this.onRouteChange}/>\n    {\n      route === \"home\"\n        ?\n          <div>\n              <Logo />\n              <Rank />\n              <ImageLinkForm onInputChange = {this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl ={imageUrl} />\n          </div>\n        :\n           ( this.state.route === \"signIn\"\n             ?\n               <SignIn onRouteChange = {this.onRouteChange}/>\n             :\n               <Register loadUseronRouteChange = {this.onRouteChange}/>)\n\n\n  }\n    </div>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}